apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-backend
# <<<<<<< dev
  namespace: app-prod
# =======
#   namespace: production
# >>>>>>> main
spec:
  replicas: 1
  selector:
    matchLabels:
      app: java-backend
  template:
    metadata:
      labels:
        app: java-backend
    spec:
      containers:
      - name: java-backend
        image: rafaelcht/kubernetes:back-PLACEHOLDER
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_USER
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: postgres_user
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: postgres_password
# <<<<<<< dev
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
# =======
#         # resources:
#         #   requests:
#         #     memory: "128Mi"
#         #     cpu: "100m"
#         #   limits:
#         #     memory: "256Mi"
#         #     cpu: "200m"
# >>>>>>> main
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
# <<<<<<< dev
  namespace: app-prod
# =======
#   namespace: production
# >>>>>>> main
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      tolerations:
        - key: "cloud.google.com/gke-quick-remove"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
      - name: frontend
        image: rafaelcht/kubernetes:front-PLACEHOLDER
        ports:
        - containerPort: 80
# <<<<<<< dev
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "400m"
            memory: "512Mi"
# =======
#         # resources:
#         #   requests:
#         #     cpu: "50m"
#         #     memory: "64Mi"
#         #   limits:
#         #     cpu: "400m"
#         #     memory: "512Mi"
# >>>>>>> main
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
# <<<<<<< dev
  namespace: app-prod
# =======
#   namespace: production
# >>>>>>> main
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
      - name: postgres-db
# <<<<<<< dev
        image: postgres:15
# =======
#         image: rafaelcht/kubernetes:db
# >>>>>>> main
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "api-semanal"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
