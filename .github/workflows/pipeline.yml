name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js for React frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./front-pedidos/package-lock.json

      # Install and test React frontend
      - name: Install and test React frontend
        working-directory: ./front-pedidos
        run: |
          npm install
          npm run build

      # Set up Java for Spring Boot backend
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Build and test Spring Boot backend
      - name: Build and test Spring Boot backend
        working-directory: ./back-pedidos
        run: |
          mvn clean install
          mvn test

deploy:
  needs: build-and-test
  runs-on: ubuntu-latest
  env:
    SSH_USER: ${{ secrets.SSH_USER }}
    PUBLIC_EC2_HOST: ${{ secrets.PUBLIC_EC2_HOST }}
    PRIVATE_EC2_HOST: ${{ secrets.PRIVATE_EC2_HOST }}
  steps:
    - name: Install SSH key for GitHub & EC2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.KEY }}" | base64 --decode > key.pem

        chmod 600 key.pem
      

    - name: Deploy via SSH
      run: |
        ssh key.pem ec2-user@3.146.35.19 "
          cd ~/Api-projeto-semanal/front-pedidos && 
          git pull origin main && 
          docker-compose down && 
	        docker-compose up --build 
        "
        ssh key.pem ec2-user@3.146.35.19 "
          ssh key.pem -o StrictHostKeyChecking=no ec2-user@10.0.30.202 
            cd ~/app-backend && 
            git pull origin main && 
            docker-compose down && 
	          docker-compose up --build
          
        "
